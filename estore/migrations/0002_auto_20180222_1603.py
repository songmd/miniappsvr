# Generated by Django 2.0.2 on 2018-02-22 16:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('estore', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppCustomer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('openid', models.CharField(max_length=128, verbose_name='微信OpenId')),
                ('session_key', models.CharField(max_length=128, verbose_name='会话密钥')),
                ('unionid', models.CharField(max_length=128, null=True, verbose_name='统一Id')),
                ('user_info', models.TextField(max_length=512, null=True, verbose_name='用户信息')),
            ],
            options={
                'verbose_name': '客户',
                'verbose_name_plural': '客户',
            },
        ),
        migrations.CreateModel(
            name='AppMerchant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mch_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='商户微信支付Id')),
                ('mch_key', models.CharField(blank=True, max_length=128, null=True, verbose_name='商户微信支付密钥')),
                ('key_file', models.FileField(blank=True, null=True, upload_to='cert', verbose_name='密钥文件')),
                ('cert_file', models.FileField(blank=True, null=True, upload_to='cert', verbose_name='证书文件')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='merchant', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '商户',
                'verbose_name_plural': '商户',
            },
        ),
        migrations.CreateModel(
            name='BasketItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='数量')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='成交价格')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='生成时间')),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='最多500个字符，250个汉字', max_length=512, verbose_name='内容')),
            ],
            options={
                'verbose_name': '公告',
                'verbose_name_plural': '公告',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=32, verbose_name='订单状态')),
                ('basket', models.ManyToManyField(to='estore.BasketItem', verbose_name='购物篮')),
                ('belong', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='estore.AppCustomer', verbose_name='所属客户')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='名称')),
                ('price', models.FloatField(verbose_name='价格')),
                ('off_price', models.FloatField(blank=True, null=True, verbose_name='折扣价格')),
            ],
            options={
                'verbose_name': '商品',
                'verbose_name_plural': '商品',
            },
        ),
        migrations.CreateModel(
            name='ShopInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=32, verbose_name='店铺名称')),
                ('app_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='小程序id')),
                ('app_secret', models.CharField(blank=True, max_length=128, null=True, verbose_name='小程序密钥')),
                ('address', models.CharField(blank=True, max_length=128, null=True, verbose_name='地址')),
                ('phone_num', models.CharField(blank=True, max_length=11, null=True, verbose_name='联系电话')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='经度')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='纬度')),
                ('description', models.TextField(blank=True, help_text='最多500个字符，250个汉字', max_length=512, null=True, verbose_name='店铺描述')),
                ('banners', models.ManyToManyField(blank=True, related_name='banners', to='estore.Picture', verbose_name='广告图片')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='estore.Picture', verbose_name='店铺图标')),
            ],
            options={
                'verbose_name': '店铺',
                'verbose_name_plural': '店铺',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='belong',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='estore.ShopInfo', verbose_name='所属商铺'),
        ),
        migrations.AddField(
            model_name='product',
            name='categories',
            field=models.ManyToManyField(blank=True, to='estore.ProductCategory', verbose_name='所属分类'),
        ),
        migrations.AddField(
            model_name='product',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='product',
            name='pics',
            field=models.ManyToManyField(blank=True, related_name='pics', to='estore.Picture', verbose_name='图片'),
        ),
        migrations.AddField(
            model_name='product',
            name='primary_pic',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='estore.Picture', verbose_name='首要图片'),
        ),
        migrations.AddField(
            model_name='notice',
            name='belong',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notices', to='estore.ShopInfo', verbose_name='所属店铺'),
        ),
        migrations.AddField(
            model_name='notice',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='basketitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket_lines', to='estore.Product', verbose_name='商品'),
        ),
        migrations.AddField(
            model_name='appcustomer',
            name='basket',
            field=models.ManyToManyField(to='estore.BasketItem', verbose_name='购物栏'),
        ),
        migrations.AddField(
            model_name='appcustomer',
            name='belong',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='estore.ShopInfo', verbose_name='所属店铺'),
        ),
    ]
